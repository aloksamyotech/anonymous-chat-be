generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      =  env("DATABASE_URL")
}

model User { 
  id        Int @id @default(autoincrement())
  email     String  @unique
  name      String
  address   String?
  password  String
  iv        String  
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  phone     String?
  isActive Boolean @default(true)
  isDeleted Boolean @default(false) 
}

model VehicleGroup { 
  id       Int @id @default(autoincrement())
  name     String  @unique
  description   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  isDeleted Boolean @default(false) 

  vehicles Vehicle[] 
}

model Vehicle {
  id                 Int      @id @default(autoincrement())
  registrationNo     String   @unique
  vehicleName        String
  model              String
  chasisNo           String   @unique
  engineNo           String   @unique
  manufacturedBy     String
  vehicleType        String
  vehicleColor       String?
  registrationExpiry DateTime
  isActive           Boolean  @default(true)
  image              String?
  doc                String?
  isDeleted Boolean @default(false) 

  vehicleGroupId    Int 
  vehicleGroup      VehicleGroup @relation(fields: [vehicleGroupId], references: [id] , onDelete : Cascade)

  createdAt          DateTime @default(now())
  updatedAt          DateTime @default(now())

  reminders Reminder[]
  fuelEntries  Fuel[]
}

model Driver {
  id             Int      @id @default(autoincrement())
  name           String
  mobileNo       String
  age            Int
  address        String
  licenseNo      String   @unique
  licenseExpiry  DateTime
  dateOfJoining  DateTime
  totalExp       Int
  notes          String?
  image          String?
  doc            String?
  status         CustomStatus @default(Active) 
  isDeleted      Boolean  @default(false) 
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  fuelEntries  Fuel[] 
}

enum CustomStatus {
  Active
  Inactive
}

model Customer {
  id             Int      @id @default(autoincrement())
  name           String
  mobileNo       String
  email          String  @unique
  address        String
  status         CustomStatus @default(Active) 
  isDeleted      Boolean  @default(false) 
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model PartsInventory {
  id             Int      @id @default(autoincrement())
  name           String
  description    String?
  stock          Int
  status         CustomStatus @default(Active) 
  isDeleted      Boolean  @default(false) 
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Fuel {
  id              Int      @id @default(autoincrement())
  vehicleId       Int
  vehicle         Vehicle  @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
  driverId        Int
  driver          Driver   @relation(fields: [driverId], references: [id], onDelete: Cascade)
  fillDate        DateTime
  quantity        Float
  odometerReading Int
  amount          Float
  comments        String?  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Reminder {
  id              Int      @id @default(autoincrement())
  reminderDate    DateTime
  message         String? 
  vehicleId       Int
  vehicle         Vehicle  @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}



